/*
	Mobile 영역 = 고정 레이아웃
	제약 조건1 - 최소 사용 가능 폰트사이즈 = 1.4 rem.
	x : 10px = 375: 14px -> x=267.857
	뷰포트 너비가 267px일때 14px이 10px이 되고
	375: 10px = 267: x -> x=7.12
	뷰포트 너비가 267px일때 10px으 7.12px이 된다.
	즉 폰트사이즈는 최소 1.4rem이 사용되어 267px까지는 폰트 때문에 레이아웃이 틀어지지 않는다.
	그러므로 267px아래는 root의 유동폰트사이즈를 고정시켜야 하는데 몇으로 고정해야 할까?
	모든 레이아웃은 뷰포트 375px에서 1rem을 10px로 하여 작성되었다.
	그러므로 뷰포트 267px에서는 1rem즉 10px이 7.12px로 변환되므로
	7.12를 반올림하여 7px로 고정하면 된다.
	그리고 267px이하에서는 루트폰트를 고정시켰으니, 레이아웃도 min-width: 267px로 잡아서 고정시킨다.
	제약 조건2 - 제약조건 1에 의해 최소 고정 레이아웃 가능 넓이는 1.4rem이 10px이 되는 1108px.

	왜 em을 사용했을까? rem도 충분할 텐데... em을 꼭 사용해야 할 필요있을까?
	그리고 루트폰트를 시스템폰트를 바라보게 함으로 접근성을 높일 필요가 이제는 없다. 왜냐면 브라우저 자체에서 뷰포트를 확대시키는 줌기능을
	가지고 있기 때문이다. 오히려 고정폰트단위를 사용한 일반 홈페이지의 레이아웃을 깨트리기에 오히려 브라우저 기본폰트를 바라보지 않게 하는것이 낫다.
	차라리 뷰포트 너비에 따른 유동폰트단위 기준의 rem을 사용함으로써 뷰포트 마다의 레이아웃을 컨트롤 하는 것이
	브라우저 줌 기능 사용에서 나타나는 레이아웃을 테스트함에 있어서 더 적합하다.
	그래서 그런지 모바일에서도 시스템 폰트를 따르지 않고, 브라우저 줌인아웃을 이용한다.

	디바의스마다(아이폰, 안드로이드) 브라우저마다(내장이냐 외장이냐?등등) 다른 거 같다. 시스템 폰트는 내장 브라우저에 적용되는 것 같은 느낌. 그래서
	안드로이드는 내장 브라우저에서 시스템폰트가 영향을 주고, 아이폰은 외장브라우저에서 시스템폰트가 영향을 안주는
	안드로이드 브라우저는 줌인기능을 제공하지 않는 것 같다. 조만간 지원할 것 같다.
	그러므로 안드로이드 폰에서는 자바스크립트로 강제로 시스템 폰트를 바라보게 하면 될거 같다. 이때도 레이아웃 틀어지지 않는다.
	rem폰트로 작성되었기 때문이다.
*/

/*
 브라우저 자동 폰트 조정 막기, 브라우저 마다 다르게 작동해서 html, body 두군데 적용해야 함.
 */
html,
body {
  text-size-adjust: none;
}

/*
고정 픽셀 사용을 염두해 두어 셋팅함, rem은 html 폰트 사이즈를 참조한다. body에 font-size를 설정하면, 상위로 부터 상속받는 엘레멘트의 기본 폰트에 영향을 준다.
*/
body {
  font-size: 16px;
}

html {
  font-size: 7px;
  font-family: Pretendard, AppleSDGothicNeo, sans-serif;
}
/*모바일 영역 개행 처리*/
h1,
h2,
h3,
h4,
h5,
h6,
p,
legend,
li,
dd,
dt,
label {
  white-space: break-spaces;
}
br {
  display: none;
}

@media (min-width: 267px) {
  html {
    font-size: 2.666666666vmin;
  }
}

/*
	PC 영역 = 고정 레이아웃
	제약 조건1 - 최소 사용 가능 폰트사이즈 = 1.4 rem.
	제약 조건2 - 제약조건 1에 의해 최소 고정 레이아웃 가능 넓이는 1.4 rem 이 10px이 되는 1108px.

	제약 조건1 - 최소 사용 가능 폰트사이즈 = 1.4 rem.
	x : 10px = 1440: 14px -> x=1028.571428571428571
	뷰포트 너비가 1028px 일때 14px이 10px이 되고
	1440: 10px = 1028: x -> x=7.138888888888889
	뷰포트 너비가 1028px 일때 10px으 7.14px이 된다.
	즉 폰트사이즈는 최소 1.4rem 이 사용되어 1028px 까지는 폰트 때문에 레이아웃이 틀어지지 않는다.
	그러므로 1028px 아래는 유동폰트를 고정시켜야 하는데 몇으로 고정해야 할까?
	모든 레이아웃은 뷰포트 1440px 에서 1rem 을 10px로 하여 작성되었다.
	그러므로 뷰포트 1028px 에서는 1 rem 즉 10px이 7.14px로 변환되므로
	7.14를 반올림하여 7px로 고정하면 된다.
*/

/*TODO 모바일에서 pc사이의 고정 레이아웃 부분을 작성하고, 모바일에서 확대되는 폰트사이즈가 너무 커지지 않도록 태블릭영역에서 조치가 필요
	태블릭 세로 화면에서는 개행 처리 제어를 해제한다.(태블릿은 유동레이아웃이어야 미려한 레이아웃이 될듯 이때 유동레이아웃은
	모바일에서 가로화면일때의 유동레이아웃에서 재사용된다.)
   컴포넌트 스타일영역에서 레이아웃 변환점을 정해서 각 컴포넌트 스타일 영역의 미디어 쿼리에 반영해야 한다.*/
@media (min-width: 800px) {
  html {
    font-size: 7px;
  }
  /*pc 영역 개행 처리*/
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  legend,
  li,
  dd,
  dt,
  label {
    white-space: initial;
  }
  br {
    /*
    display: initial;
    */
    display: none;
  }
}
/*
10 / 1440 * 100
pc view 는 horizontal 이 기본 이기에 vmax 를 사용
*/
@media (min-width: 1028px) {
  html {
    font-size: 0.69444444vmax;
  }
}
